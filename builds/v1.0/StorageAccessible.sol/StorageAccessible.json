{"abi":[{"type":"function","name":"getStorageAt","inputs":[{"name":"offset","type":"uint256","internalType":"uint256"},{"name":"length","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"simulateAndRevert","inputs":[{"name":"targetContract","type":"address","internalType":"address"},{"name":"calldataPayload","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getStorageAt(uint256,uint256)":"5624b25b","simulateAndRevert(address,bytes)":"b4faba09"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"getStorageAt\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"targetContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"calldataPayload\",\"type\":\"bytes\"}],\"name\":\"simulateAndRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Gnosis Developers\",\"kind\":\"dev\",\"methods\":{\"getStorageAt(uint256,uint256)\":{\"params\":{\"length\":\"- the number of words (32 bytes) of data to read\",\"offset\":\"- the offset in the current contract's storage in words to start reading from\"},\"returns\":{\"_0\":\"the bytes that were read.\"}},\"simulateAndRevert(address,bytes)\":{\"details\":\"Performs a delegatecall on a targetContract in the context of self. Internally reverts execution to avoid side effects (making it static). This method reverts with data equal to `abi.encode(bool(success), bytes(response))`. Specifically, the `returndata` after a call to this method will be: `success:bool || response.length:uint256 || response:bytes`.\",\"params\":{\"calldataPayload\":\"Calldata that should be sent to the target contract (encoded method name and arguments).\",\"targetContract\":\"Address of the contract containing the code to execute.\"}}},\"title\":\"StorageAccessible - A generic base contract that allows callers to access all internal storage.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getStorageAt(uint256,uint256)\":{\"notice\":\"Reads `length` bytes of storage in the currents contract\"}},\"notice\":\"See https://github.com/gnosis/util-contracts/blob/bb5fe5fb5df6d8400998094fb1b32a178a47c3a1/contracts/StorageAccessible.sol         It removes a method from the original contract not needed for the Safe contracts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/safe-smart-account/contracts/common/StorageAccessible.sol\":\"StorageAccessible\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":@safe-smart-account/contracts/=lib/safe-smart-account/contracts/\",\":ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":safe-smart-account/=lib/safe-smart-account/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"],\"viaIR\":true},\"sources\":{\"lib/safe-smart-account/contracts/common/StorageAccessible.sol\":{\"keccak256\":\"0x2c5412a8f014db332322a6b24ee3cedce15dca17a721ae49fdef368568d4391e\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://e775f267d3e60ebe452d9533f46a0eb1f1dc4593d1bcb553e86cea205a5f361e\",\"dweb:/ipfs/QmQdYDHGQsiMx1AADWRhX7tduU9ycTzrT5q3zBWvphXzKZ\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"offset","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"stateMutability":"view","type":"function","name":"getStorageAt","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"address","name":"targetContract","type":"address"},{"internalType":"bytes","name":"calldataPayload","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"simulateAndRevert"}],"devdoc":{"kind":"dev","methods":{"getStorageAt(uint256,uint256)":{"params":{"length":"- the number of words (32 bytes) of data to read","offset":"- the offset in the current contract's storage in words to start reading from"},"returns":{"_0":"the bytes that were read."}},"simulateAndRevert(address,bytes)":{"details":"Performs a delegatecall on a targetContract in the context of self. Internally reverts execution to avoid side effects (making it static). This method reverts with data equal to `abi.encode(bool(success), bytes(response))`. Specifically, the `returndata` after a call to this method will be: `success:bool || response.length:uint256 || response:bytes`.","params":{"calldataPayload":"Calldata that should be sent to the target contract (encoded method name and arguments).","targetContract":"Address of the contract containing the code to execute."}}},"version":1},"userdoc":{"kind":"user","methods":{"getStorageAt(uint256,uint256)":{"notice":"Reads `length` bytes of storage in the currents contract"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@openzeppelin/upgrades/=lib/openzeppelin-foundry-upgrades/src/","@safe-smart-account/contracts/=lib/safe-smart-account/contracts/","ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/","safe-smart-account/=lib/safe-smart-account/","solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"],"optimizer":{"runs":200,"details":{"peephole":true,"inliner":true,"jumpdestRemover":true,"orderLiterals":true,"deduplicate":true,"cse":true,"constantOptimizer":true,"yul":true,"yulDetails":{"stackAllocation":true,"optimizerSteps":"dhfoDgvulfnTUtnIf:fDnTOcmuO"},"simpleCounterForLoopUncheckedIncrement":true}},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/safe-smart-account/contracts/common/StorageAccessible.sol":"StorageAccessible"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"lib/safe-smart-account/contracts/common/StorageAccessible.sol":{"keccak256":"0x2c5412a8f014db332322a6b24ee3cedce15dca17a721ae49fdef368568d4391e","urls":["bzz-raw://e775f267d3e60ebe452d9533f46a0eb1f1dc4593d1bcb553e86cea205a5f361e","dweb:/ipfs/QmQdYDHGQsiMx1AADWRhX7tduU9ycTzrT5q3zBWvphXzKZ"],"license":"LGPL-3.0-only"}},"version":1},"storageLayout":{"storage":[],"types":{}},"ast":{"absolutePath":"lib/safe-smart-account/contracts/common/StorageAccessible.sol","id":55101,"exportedSymbols":{"StorageAccessible":[55100]},"nodeType":"SourceUnit","src":"42:2329:88","nodes":[{"id":55053,"nodeType":"PragmaDirective","src":"42:31:88","nodes":[],"literals":["solidity",">=","0.7",".0","<","0.9",".0"]},{"id":55100,"nodeType":"ContractDefinition","src":"445:1925:88","nodes":[{"id":55089,"nodeType":"FunctionDefinition","src":"785:464:88","nodes":[],"body":{"id":55088,"nodeType":"Block","src":"874:375:88","nodes":[],"statements":[{"assignments":[55065],"declarations":[{"constant":false,"id":55065,"mutability":"mutable","name":"result","nameLocation":"897:6:88","nodeType":"VariableDeclaration","scope":55088,"src":"884:19:88","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":55064,"name":"bytes","nodeType":"ElementaryTypeName","src":"884:5:88","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":55072,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":55070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":55068,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55059,"src":"916:6:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":55069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"925:2:88","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"916:11:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":55067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"906:9:88","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":55066,"name":"bytes","nodeType":"ElementaryTypeName","src":"910:5:88","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":55071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"906:22:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"884:44:88"},{"body":{"id":55084,"nodeType":"Block","src":"987:233:88","statements":[{"AST":{"nativeSrc":"1070:140:88","nodeType":"YulBlock","src":"1070:140:88","statements":[{"nativeSrc":"1088:37:88","nodeType":"YulVariableDeclaration","src":"1088:37:88","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"1110:6:88","nodeType":"YulIdentifier","src":"1110:6:88"},{"name":"index","nativeSrc":"1118:5:88","nodeType":"YulIdentifier","src":"1118:5:88"}],"functionName":{"name":"add","nativeSrc":"1106:3:88","nodeType":"YulIdentifier","src":"1106:3:88"},"nativeSrc":"1106:18:88","nodeType":"YulFunctionCall","src":"1106:18:88"}],"functionName":{"name":"sload","nativeSrc":"1100:5:88","nodeType":"YulIdentifier","src":"1100:5:88"},"nativeSrc":"1100:25:88","nodeType":"YulFunctionCall","src":"1100:25:88"},"variables":[{"name":"word","nativeSrc":"1092:4:88","nodeType":"YulTypedName","src":"1092:4:88","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"result","nativeSrc":"1157:6:88","nodeType":"YulIdentifier","src":"1157:6:88"},{"kind":"number","nativeSrc":"1165:4:88","nodeType":"YulLiteral","src":"1165:4:88","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1153:3:88","nodeType":"YulIdentifier","src":"1153:3:88"},"nativeSrc":"1153:17:88","nodeType":"YulFunctionCall","src":"1153:17:88"},{"arguments":[{"name":"index","nativeSrc":"1176:5:88","nodeType":"YulIdentifier","src":"1176:5:88"},{"kind":"number","nativeSrc":"1183:4:88","nodeType":"YulLiteral","src":"1183:4:88","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"1172:3:88","nodeType":"YulIdentifier","src":"1172:3:88"},"nativeSrc":"1172:16:88","nodeType":"YulFunctionCall","src":"1172:16:88"}],"functionName":{"name":"add","nativeSrc":"1149:3:88","nodeType":"YulIdentifier","src":"1149:3:88"},"nativeSrc":"1149:40:88","nodeType":"YulFunctionCall","src":"1149:40:88"},{"name":"word","nativeSrc":"1191:4:88","nodeType":"YulIdentifier","src":"1191:4:88"}],"functionName":{"name":"mstore","nativeSrc":"1142:6:88","nodeType":"YulIdentifier","src":"1142:6:88"},"nativeSrc":"1142:54:88","nodeType":"YulFunctionCall","src":"1142:54:88"},"nativeSrc":"1142:54:88","nodeType":"YulExpressionStatement","src":"1142:54:88"}]},"evmVersion":"cancun","externalReferences":[{"declaration":55074,"isOffset":false,"isSlot":false,"src":"1118:5:88","valueSize":1},{"declaration":55074,"isOffset":false,"isSlot":false,"src":"1176:5:88","valueSize":1},{"declaration":55057,"isOffset":false,"isSlot":false,"src":"1110:6:88","valueSize":1},{"declaration":55065,"isOffset":false,"isSlot":false,"src":"1157:6:88","valueSize":1}],"id":55083,"nodeType":"InlineAssembly","src":"1061:149:88"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":55079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":55077,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55074,"src":"962:5:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":55078,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55059,"src":"970:6:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"962:14:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":55085,"initializationExpression":{"assignments":[55074],"declarations":[{"constant":false,"id":55074,"mutability":"mutable","name":"index","nameLocation":"951:5:88","nodeType":"VariableDeclaration","scope":55085,"src":"943:13:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":55073,"name":"uint256","nodeType":"ElementaryTypeName","src":"943:7:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":55076,"initialValue":{"hexValue":"30","id":55075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"959:1:88","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"943:17:88"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":55081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"978:7:88","subExpression":{"id":55080,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55074,"src":"978:5:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":55082,"nodeType":"ExpressionStatement","src":"978:7:88"},"nodeType":"ForStatement","src":"938:282:88"},{"expression":{"id":55086,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55065,"src":"1236:6:88","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":55063,"id":55087,"nodeType":"Return","src":"1229:13:88"}]},"documentation":{"id":55055,"nodeType":"StructuredDocumentation","src":"487:293:88","text":" @notice Reads `length` bytes of storage in the currents contract\n @param offset - the offset in the current contract's storage in words to start reading from\n @param length - the number of words (32 bytes) of data to read\n @return the bytes that were read."},"functionSelector":"5624b25b","implemented":true,"kind":"function","modifiers":[],"name":"getStorageAt","nameLocation":"794:12:88","parameters":{"id":55060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55057,"mutability":"mutable","name":"offset","nameLocation":"815:6:88","nodeType":"VariableDeclaration","scope":55089,"src":"807:14:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":55056,"name":"uint256","nodeType":"ElementaryTypeName","src":"807:7:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":55059,"mutability":"mutable","name":"length","nameLocation":"831:6:88","nodeType":"VariableDeclaration","scope":55089,"src":"823:14:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":55058,"name":"uint256","nodeType":"ElementaryTypeName","src":"823:7:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"806:32:88"},"returnParameters":{"id":55063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55062,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":55089,"src":"860:12:88","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":55061,"name":"bytes","nodeType":"ElementaryTypeName","src":"860:5:88","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:14:88"},"scope":55100,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":55099,"nodeType":"FunctionDefinition","src":"1882:486:88","nodes":[],"body":{"id":55098,"nodeType":"Block","src":"1972:396:88","nodes":[],"statements":[{"AST":{"nativeSrc":"2047:315:88","nodeType":"YulBlock","src":"2047:315:88","statements":[{"nativeSrc":"2061:108:88","nodeType":"YulVariableDeclaration","src":"2061:108:88","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"2089:3:88","nodeType":"YulIdentifier","src":"2089:3:88"},"nativeSrc":"2089:5:88","nodeType":"YulFunctionCall","src":"2089:5:88"},{"name":"targetContract","nativeSrc":"2096:14:88","nodeType":"YulIdentifier","src":"2096:14:88"},{"arguments":[{"name":"calldataPayload","nativeSrc":"2116:15:88","nodeType":"YulIdentifier","src":"2116:15:88"},{"kind":"number","nativeSrc":"2133:4:88","nodeType":"YulLiteral","src":"2133:4:88","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2112:3:88","nodeType":"YulIdentifier","src":"2112:3:88"},"nativeSrc":"2112:26:88","nodeType":"YulFunctionCall","src":"2112:26:88"},{"arguments":[{"name":"calldataPayload","nativeSrc":"2146:15:88","nodeType":"YulIdentifier","src":"2146:15:88"}],"functionName":{"name":"mload","nativeSrc":"2140:5:88","nodeType":"YulIdentifier","src":"2140:5:88"},"nativeSrc":"2140:22:88","nodeType":"YulFunctionCall","src":"2140:22:88"},{"kind":"number","nativeSrc":"2164:1:88","nodeType":"YulLiteral","src":"2164:1:88","type":"","value":"0"},{"kind":"number","nativeSrc":"2167:1:88","nodeType":"YulLiteral","src":"2167:1:88","type":"","value":"0"}],"functionName":{"name":"delegatecall","nativeSrc":"2076:12:88","nodeType":"YulIdentifier","src":"2076:12:88"},"nativeSrc":"2076:93:88","nodeType":"YulFunctionCall","src":"2076:93:88"},"variables":[{"name":"success","nativeSrc":"2065:7:88","nodeType":"YulTypedName","src":"2065:7:88","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2190:4:88","nodeType":"YulLiteral","src":"2190:4:88","type":"","value":"0x00"},{"name":"success","nativeSrc":"2196:7:88","nodeType":"YulIdentifier","src":"2196:7:88"}],"functionName":{"name":"mstore","nativeSrc":"2183:6:88","nodeType":"YulIdentifier","src":"2183:6:88"},"nativeSrc":"2183:21:88","nodeType":"YulFunctionCall","src":"2183:21:88"},"nativeSrc":"2183:21:88","nodeType":"YulExpressionStatement","src":"2183:21:88"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2224:4:88","nodeType":"YulLiteral","src":"2224:4:88","type":"","value":"0x20"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"2230:14:88","nodeType":"YulIdentifier","src":"2230:14:88"},"nativeSrc":"2230:16:88","nodeType":"YulFunctionCall","src":"2230:16:88"}],"functionName":{"name":"mstore","nativeSrc":"2217:6:88","nodeType":"YulIdentifier","src":"2217:6:88"},"nativeSrc":"2217:30:88","nodeType":"YulFunctionCall","src":"2217:30:88"},"nativeSrc":"2217:30:88","nodeType":"YulExpressionStatement","src":"2217:30:88"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2275:4:88","nodeType":"YulLiteral","src":"2275:4:88","type":"","value":"0x40"},{"kind":"number","nativeSrc":"2281:1:88","nodeType":"YulLiteral","src":"2281:1:88","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"2284:14:88","nodeType":"YulIdentifier","src":"2284:14:88"},"nativeSrc":"2284:16:88","nodeType":"YulFunctionCall","src":"2284:16:88"}],"functionName":{"name":"returndatacopy","nativeSrc":"2260:14:88","nodeType":"YulIdentifier","src":"2260:14:88"},"nativeSrc":"2260:41:88","nodeType":"YulFunctionCall","src":"2260:41:88"},"nativeSrc":"2260:41:88","nodeType":"YulExpressionStatement","src":"2260:41:88"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2321:1:88","nodeType":"YulLiteral","src":"2321:1:88","type":"","value":"0"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"2328:14:88","nodeType":"YulIdentifier","src":"2328:14:88"},"nativeSrc":"2328:16:88","nodeType":"YulFunctionCall","src":"2328:16:88"},{"kind":"number","nativeSrc":"2346:4:88","nodeType":"YulLiteral","src":"2346:4:88","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2324:3:88","nodeType":"YulIdentifier","src":"2324:3:88"},"nativeSrc":"2324:27:88","nodeType":"YulFunctionCall","src":"2324:27:88"}],"functionName":{"name":"revert","nativeSrc":"2314:6:88","nodeType":"YulIdentifier","src":"2314:6:88"},"nativeSrc":"2314:38:88","nodeType":"YulFunctionCall","src":"2314:38:88"},"nativeSrc":"2314:38:88","nodeType":"YulExpressionStatement","src":"2314:38:88"}]},"evmVersion":"cancun","externalReferences":[{"declaration":55094,"isOffset":false,"isSlot":false,"src":"2116:15:88","valueSize":1},{"declaration":55094,"isOffset":false,"isSlot":false,"src":"2146:15:88","valueSize":1},{"declaration":55092,"isOffset":false,"isSlot":false,"src":"2096:14:88","valueSize":1}],"id":55097,"nodeType":"InlineAssembly","src":"2038:324:88"}]},"documentation":{"id":55090,"nodeType":"StructuredDocumentation","src":"1255:622:88","text":" @dev Performs a delegatecall on a targetContract in the context of self.\n Internally reverts execution to avoid side effects (making it static).\n This method reverts with data equal to `abi.encode(bool(success), bytes(response))`.\n Specifically, the `returndata` after a call to this method will be:\n `success:bool || response.length:uint256 || response:bytes`.\n @param targetContract Address of the contract containing the code to execute.\n @param calldataPayload Calldata that should be sent to the target contract (encoded method name and arguments)."},"functionSelector":"b4faba09","implemented":true,"kind":"function","modifiers":[],"name":"simulateAndRevert","nameLocation":"1891:17:88","parameters":{"id":55095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55092,"mutability":"mutable","name":"targetContract","nameLocation":"1917:14:88","nodeType":"VariableDeclaration","scope":55099,"src":"1909:22:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55091,"name":"address","nodeType":"ElementaryTypeName","src":"1909:7:88","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":55094,"mutability":"mutable","name":"calldataPayload","nameLocation":"1946:15:88","nodeType":"VariableDeclaration","scope":55099,"src":"1933:28:88","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":55093,"name":"bytes","nodeType":"ElementaryTypeName","src":"1933:5:88","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1908:54:88"},"returnParameters":{"id":55096,"nodeType":"ParameterList","parameters":[],"src":"1972:0:88"},"scope":55100,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":true,"baseContracts":[],"canonicalName":"StorageAccessible","contractDependencies":[],"contractKind":"contract","documentation":{"id":55054,"nodeType":"StructuredDocumentation","src":"75:369:88","text":" @title StorageAccessible - A generic base contract that allows callers to access all internal storage.\n @notice See https://github.com/gnosis/util-contracts/blob/bb5fe5fb5df6d8400998094fb1b32a178a47c3a1/contracts/StorageAccessible.sol\n         It removes a method from the original contract not needed for the Safe contracts.\n @author Gnosis Developers"},"fullyImplemented":true,"linearizedBaseContracts":[55100],"name":"StorageAccessible","nameLocation":"463:17:88","scope":55101,"usedErrors":[],"usedEvents":[]}],"license":"LGPL-3.0-only"},"id":88}